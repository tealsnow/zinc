fn main() {}

fn bar (a: sint) {}
fn bar2(a: sint, b: uint,) {}

fn baz(): void {}
fn add(sint, sint): sint {}
fn add(sint, sint,): sint {}

fn literals() {
    1;
    0x2;
    0b11;
    0o4;
    1.2;

    "this is string";

    path::to::somewhere;
}

fn return_naked() { return; }
fn return_value(): sint { return 1; }

fn infix_ops() {
    a = b;
    a + b;
    a - b;
    a * b;
    a / b;
}

fn add_long(a: sint, b: sint,): sint {
    let ret = a + b;
    return ret;
}
fn add_shorter(a: sint, b: sint): sint {
    return a + b;
}
fn add_shortist(a: sint, b: sint): sint => a + b;

fn let_bindings() {
    let a: string = "a";
    let b = "b";
    let c: sint = 3;
}

const ONE = 1;
const NAME = "zinc";
const THREE: uint = 3;

fn square(a: sint): sint => a * a;

fn blocks() {
    let outer = "outer";
    {
        let inner = "inner";
        {
            let inner2 = "inner2";
        }
    }
}

fn asdf(a: []char, b: ?bool) {
}
