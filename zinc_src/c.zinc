foo fn() {}
bar fn(a sint, b uint,) {}

main fn {}

baz fn void {}

add fn(a sint, b sint) sint => a + b;
add fn(a sint, b sint) sint {
    // return a + b;
    let ret = a + b;
    return ret;
}

literals fn {
    1;
    0x2;
    0b11;
    0o4;
    1.2;

    {
        a;
        b;
    }
}

infix_ops fn {
    a = b;
    a + b;
    a - b;
    a * b;
    a / b;
}

ONE const 1;
NAME const "zinc";

// square fn(a sint) sint => a * a;

// let_bindings fn {
//     let a string = "a";
//     let b = "b";
//     let c sint = 3;
// }
