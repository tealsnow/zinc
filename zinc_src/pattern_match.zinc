fn main() {
    let x: ?u32 = null;

    if let |x| = x {}

    match x {
        1 => {}
        2 => {}
        x => {}
        null => {}
    }

    let f = foo#<u32>(fn(i) println(i));
    f(2); //> 2

    let f2 = foo#<(bool, u32)>(fn(|(b, i)| if (b) println(i)));
    f2((false, 2)); //>
}

fn foo<T>(f: fn(T)) -> fn(t: T) {
    return fn(t: T) f(t);
}
